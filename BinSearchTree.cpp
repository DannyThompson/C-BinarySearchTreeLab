 /*                                                                                                                                                                                                         
Author: Daniel Thompson                                                                                                                                                                                     
Course: CS 315                                                                                                                                                                                              
Assignment: Lab 4 Part C                                                                                                                                                                                    
*/                                                                                                                                                                                                          
                                                                                                                                                                                                            
#include <iostream>                                                                                                                                                                                         
#include <cstdlib>                                                                                                                                                                                          
#include "TreeNode.hpp"                                                                                                                                                                                     
#include "BinSearchTree.hpp"                                                                                                                                                                                
#include <queue>                                                                                                                                                                                            
                                                                                                                                                                                                            
BinSearchTree::~BinSearchTree()                                                                                                                                                                             
{                                                                                                                                                                                                           
  while(root != nullptr)                                                                                                                                                                                    
    remove(root->value());                                                                                                                                                                                  
  std::cout<<"Tree deleted\n";                                                                                                                                                                              
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
TreeNode *BinSearchTree::local_insert( TreeNode *root, int v ) {                                                                                                                                            
  if( root == nullptr )                                                                                                                                                                                     
    return new TreeNode( v );                                                                                                                                                                               
  if( root->value() < v )                                                                                                                                                                                   
    root->rightSubtree( local_insert( root->rightSubtree(), v ) );                                                                                                                                          
  else                                                                                                                                                                                                      
    root->leftSubtree( local_insert( root->leftSubtree(), v ) );                                                                                                                                            
  return root;                                                                                                                                                                                              
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
                                                                                                                                                                                                            
//Helper for normal find() function. This way we can take a pointer too.                                                                                                                                    
//This is the recursive Helper                                                                                                                                                                              
bool BinSearchTree::local_find(TreeNode *root, int v)                                                                                                                                                       
{                                                                                                                                                                                                           
  if(root == nullptr)                                                                                                                                                                                       
    return false;                                                                                                                                                                                           
  if(root->value() == v)                                                                                                                                                                                    
    return true;                                                                                                                                                                                            
  if(root->value() < v)                                                                                                                                                                                     
    return local_find(root->rightSubtree(), v);                                                                                                                                                             
                                                                                                                                                                                                            
  return local_find(root->leftSubtree(), v);                                                                                                                                                                
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//If the given value is found in the tree, return true. Else return false                                                                                                                                   
bool BinSearchTree::find(int v)                                                                                                                                                                             
{                                                                                                                                                                                                           
  if( local_find( root, v ) )                                                                                                                                                                               
    return true;                                                                                                                                                                                            
                                                                                                                                                                                                            
  return false;                                                                                                                                                                                             
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Iterative Find solution                                                                                                                                                                                   
bool BinSearchTree::iterFind(int v)                                                                                                                                                                         
{                                                                                                                                                                                                           
  TreeNode *tree = root;                                                                                                                                                                                    
                                                                                                                                                                                                            
  while(tree != nullptr)            
     {                                                                                                                                                                                                       
      if(tree->value() == v)                                                                                                                                                                                
        return true;                                                                                                                                                                                        
      if(tree->value() < v)                                                                                                                                                                                 
        tree = tree->rightSubtree();                                                                                                                                                                        
      else                                                                                                                                                                                                  
        tree = tree->leftSubtree();                                                                                                                                                                         
    }                                                                                                                                                                                                       
  return false;                                                                                                                                                                                             
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
void BinSearchTree::insert(int v) {                                                                                                                                                                         
  if( ! find(v) )                                                                                                                                                                                           
    root = local_insert( root, v );                                                                                                                                                                         
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Size function calls helper function                                                                                                                                                                       
int BinSearchTree::size()                                                                                                                                                                                   
{                                                                                                                                                                                                           
  return local_size(root);                                                                                                                                                                                  
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Helper For size() so that once again, we can use an initial pointer.                                                                                                                                      
int BinSearchTree::local_size(TreeNode *root)                                                                                                                                                               
{                                                                                                                                                                                                           
  if(root == nullptr)                                                                                                                                                                                       
    return 0;                                                                                                                                                                                               
                                                                                                                                                                                                            
  return 1 + local_size( root->leftSubtree() ) + local_size( root->rightSubtree() );                                                                                                                        
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Dumps the contents of the tree in ascending order                                                                                                                                                         
void BinSearchTree:: inorderDump()                                                                                                                                                                          
{                                                                                                                                                                                                           
  print(root);                                                                                                                                                                                              
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Helper Fnction for inorderDump()                                                                                                                                                                          
void BinSearchTree:: print(TreeNode *root)                                                                                                                                                                  
{                                                                                                                                                                                                           
  if(root == nullptr)                                                                                                                                                                                       
    return;                                                                                                                                                                                                 
                                                                                                                                                                                                            
  print(root->leftSubtree());                                                                                                                                                                               
  std::cout << root->value() << std::endl;                                                                                                                                                                  
  print(root->rightSubtree());                                                                                                                                                                              
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Prints the depth of the tree. Uses two helper functions.                                                                                                                                                  
int BinSearchTree::maxDepth()                                                                                                                                                                               
{                                                                                                                                                                                                           
  return maxH(root);                                                                                                                                                                                        
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Max helper #1 This was shown in class.                                                                                                                                                                    
int BinSearchTree::max(int x, int y)                                                                                                                                                                        
{                                              
 return x > y ? x:y;                                                                                                                                                                                       
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Max helper #2 calls on max(int, int)                                                                                                                                                                      
int BinSearchTree::maxH(TreeNode *root)                                                                                                                                                                     
{                                                                                                                                                                                                           
  if(root == nullptr)                                                                                                                                                                                       
    return 0;                                                                                                                                                                                               
                                                                                                                                                                                                            
  return 1 + max( maxH( root->leftSubtree() ), maxH( root->rightSubtree() ) );                                                                                                                              
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Finds the maximum depth iteratively                                                                                                                                                                       
int BinSearchTree::iterMaxDepth()                                                                                                                                                                           
{                                                                                                                                                                                                           
  TreeNode *temp = root;                                                                                                                                                                                    
  if( temp == nullptr )                                                                                                                                                                                     
    return 0;                                                                                                                                                                                               
                                                                                                                                                                                                            
  std::queue<TreeNode*> t;                                                                                                                                                                                  
  t.push(temp);                                                                                                                                                                                             
                                                                                                                                                                                                            
  int height = 0;                                                                                                                                                                                           
  int cur = 1;                                                                                                                                                                                              
  int n = 0;                                                                                                                                                                                                
                                                                                                                                                                                                            
  while(!t.empty())                                                                                                                                                                                         
    {                                                                                                                                                                                                       
      TreeNode *tree = t.front();                                                                                                                                                                           
      t.pop();                                                                                                                                                                                              
      cur--;                                                                                                                                                                                                
      if(tree->leftSubtree() != nullptr)                                                                                                                                                                    
        {                                                                                                                                                                                                   
          t.push(tree->leftSubtree());                                                                                                                                                                      
          n++;                                                                                                                                                                                              
        }                                                                                                                                                                                                   
      if(tree->rightSubtree() != nullptr)                                                                                                                                                                   
        {                                                                                                                                                                                                   
          t.push(tree->rightSubtree());                                                                                                                                                                     
          n++;                                                                                                                                                                                              
        }                                                                                                                                                                                                   
      if(cur == 0)                                                                                                                                                                                          
        {                                                                                                                                                                                                   
          height++;                                                                                                                                                                                         
          cur = n;                                                                                                                                                                                          
          n = 0;                                                                                                                                                                                            
        }                                                                                                                                                                                                   
    }                                                                                                                                                                                                       
                                                                                                                                                                                                            
  return height;                                                                                                                                                                                            
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Dumps the trees contents level by level.                                                                                                                                                                  
//Prints all on one line. However, if you look at the actual tree                                                                                                                                           
//It does indeed print out the levels correctly, with the first being the root                                                                                                                              
//Using one queue was the downfall that led to only printing on one line.                                                                                                                                   
void BinSearchTree::levelOrderDump()                                             
{                                                                                                                                                                                                           
  TreeNode *tree = root;                                                                                                                                                                                    
  std::queue<TreeNode*> q;                                                                                                                                                                                  
  q.push(tree);                                                                                                                                                                                             
                                                                                                                                                                                                            
  while(!q.empty())                                                                                                                                                                                         
    {                                                                                                                                                                                                       
      TreeNode *cur = q.front();                                                                                                                                                                            
      q.pop();                                                                                                                                                                                              
                                                                                                                                                                                                            
      if(cur)                                                                                                                                                                                               
        {                                                                                                                                                                                                   
          std::cout << cur->value() << " \n";                                                                                                                                                               
          q.push(cur->leftSubtree());                                                                                                                                                                       
          q.push(cur->rightSubtree());                                                                                                                                                                      
        }                                                                                                                                                                                                   
    }                                                                                                                                                                                                       
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Calls a helper function to remove a node with a given value                                                                                                                                               
bool BinSearchTree::remove(int v)                                                                                                                                                                           
{                                                                                                                                                                                                           
  if(find(v))                                                                                                                                                                                               
    {                                                                                                                                                                                                       
      root = removeH(root, v);                                                                                                                                                                              
      return true;                                                                                                                                                                                          
    }                                                                                                                                                                                                       
  return false;                                                                                                                                                                                             
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Min finder of the right subtree. Helper for remove.                                                                                                                                                       
TreeNode* BinSearchTree::min(TreeNode *root)                                                                                                                                                                
{                                                                                                                                                                                                           
  while(root->leftSubtree() != nullptr)                                                                                                                                                                     
    root = root->leftSubtree();                                                                                                                                                                             
  return root;                                                                                                                                                                                              
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Helper function of remove. Utilizes an additional helper called min.                                                                                                                                      
//if there are two children of a given node, it finds the min node                                                                                                                                          
//In the subtree, and swaps it with the node to be removed.                                                                                                                                                 
TreeNode *BinSearchTree::removeH(TreeNode *root, int v)                                                                                                                                                     
{                                                                                                                                                                                                           
  if(root == nullptr)                                                                                                                                                                                       
    return root;                                                                                                                                                                                            
                                                                                                                                                                                                            
  if(root->value() >  v)                                                                                                                                                                                    
    root->leftSubtree( removeH(root->leftSubtree(), v));                                                                                                                                                    
                                                                                                                                                                                                            
  if(root->value() < v)                                                                                                                                                                                     
    root->rightSubtree( removeH(root->rightSubtree(), v));                                                                                                                                                  
                                                                                                                                                                                                            
                                                                                                                                                                                                            
  if(root->value() == v)                                                                                                                                                                                    
    {                                                                                                                                                                                                       
      //If has no children                                                                                                                                                                                  
      if(root->leftSubtree() == nullptr && root->rightSubtree() == nullptr)  
        {                                                                                                                                                                                                   
          delete root;                                                                                                                                                                                      
          return nullptr;                                                                                                                                                                                   
        }                                                                                                                                                                                                   
                                                                                                                                                                                                            
      //One child                                                                                                                                                                                           
      if(root->leftSubtree() == nullptr)                                                                                                                                                                    
        {                                                                                                                                                                                                   
        TreeNode *temp = root;                                                                                                                                                                              
        root = root->rightSubtree();                                                                                                                                                                        
        delete temp;                                                                                                                                                                                        
      }                                                                                                                                                                                                     
      if(root->rightSubtree() == nullptr)                                                                                                                                                                   
        {                                                                                                                                                                                                   
          TreeNode *temp = root;                                                                                                                                                                            
          root = root->leftSubtree();                                                                                                                                                                       
          delete temp;                                                                                                                                                                                      
        }                                                                                                                                                                                                   
                                                                                                                                                                                                            
      //Two children                                                                                                                                                                                        
      else                                                                                                                                                                                                  
        {                                                                                                                                                                                                   
          TreeNode *temp = min(root->rightSubtree());                                                                                                                                                       
          root->value() = temp->value();                                                                                                                                                                    
          root->rightSubtree( removeH(root->rightSubtree(), temp->value()));                                                                                                                                
        }                                                                                                                                                                                                   
    }                                                                                                                                                                                                       
  return root;                                                                                                                                                                                              
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Checks the kth smallest node and returns it. Uses a helper to take a 2nd parameter                                                                                                                        
int BinSearchTree::kthSmallest(int k)                                                                                                                                                                       
{                                                                                                                                                                                                           
  return kH(root, k);                                                                                                                                                                                       
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Kth helper                                                                                                                                                                                                
int BinSearchTree::kH(TreeNode *root, int k)                                                                                                                                                                
{                                                                                                                                                                                                           
                                                                                                                                                                                                            
  if(local_size(root->leftSubtree()) == k - 1 )                                                                                                                                                             
     return root->value();                                                                                                                                                                                  
                                                                                                                                                                                                            
                                                                                                                                                                                                            
  if( local_size(root->leftSubtree() ) > k-1 )                                                                                                                                                              
      return kH(root->leftSubtree(), k);                                                                                                                                                                    
                                                                                                                                                                                                            
  return kH( root->rightSubtree(), k - local_size(root->leftSubtree())  - 1  );                                                                                                                             
                                                                                                                                                                                                            
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Checks if there is a path from root to leaf that adds to a given sum                                                                                                                                      
bool BinSearchTree::hasRootToLeafSum( int sum )                                                                                                                                                             
{                                                                  
if( rtlsH( root, sum ) )                                                                                                                                                                                  
    return true;                                                                                                                                                                                            
                                                                                                                                                                                                            
  return false;                                                                                                                                                                                             
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Helper function. Abbreviated for shorter name                                                                                                                                                             
bool BinSearchTree::rtlsH(TreeNode* root, int sum)                                                                                                                                                          
{                                                                                                                                                                                                           
                                                                                                                                                                                                            
  if(root==nullptr && sum == 0)                                                                                                                                                                             
    return true;                                                                                                                                                                                            
                                                                                                                                                                                                            
  if(root == nullptr)                                                                                                                                                                                       
    return false;                                                                                                                                                                                           
                                                                                                                                                                                                            
  if( rtlsH( root->leftSubtree(), sum - root->value() ) )                                                                                                                                                   
      return true;                                                                                                                                                                                          
                                                                                                                                                                                                            
  if( rtlsH( root->rightSubtree(), sum - root->value() ) )                                                                                                                                                  
    return true;                                                                                                                                                                                            
                                                                                                                                                                                                            
  return false;                                                                                                                                                                                             
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Recursively prints values at a given level k.                                                                                                                                                             
void BinSearchTree::valuesAtLevel( int k )                                                                                                                                                                  
{                                                                                                                                                                                                           
  local_values(root, k, 1);                                                                                                                                                                                 
}                                    

//Values at level helper                                                                                                                                                                                    
void BinSearchTree::local_values(TreeNode *root, int k, int c)                                                                                                                                              
{                                                                                                                                                                                                           
  if(root==nullptr || c > k)                                                                                                                                                                                
    return;                                                                                                                                                                                                 
                                                                                                                                                                                                            
  if(k == c)                                                                                                                                                                                                
    std::cout << root->value() << " ";                                                                                                                                                                      
                                                                                                                                                                                                            
  local_values(root->leftSubtree(), k, c+1);                                                                                                                                                                
  local_values(root->rightSubtree(), k, c+1);                                                                                                                                                               
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Iteratively prints the values at a certain level(k). Uses two queues.                                                                                                                                     
void BinSearchTree::iterValuesAtLevel( int k )                                                                                                                                                              
{                                                                                                                                                                                                           
                                                                                                                                                                                                            
  std::queue<TreeNode*> curr;                                                                                                                                                                               
  std::queue<TreeNode*> next;                                                                                                                                                                               
  TreeNode *tree = root;                                                                                                                                                                                    
                                                                                                                                                                                                            
  curr.push(tree);                                                                                                                                                                                          
                                                                                                                                                                                                            
  int level = 1;                                                                                                                                                                                            
                                                                                                                                                                                                            
  while(level!=k)                                                                                                                                                                                           
    {                                                                                                                                                                                                       
      while(!curr.empty())                                                                                                                                                                                  
        {                                                                                                                                                                                                   
          TreeNode* node = curr.front();                                                                                                                                                                    
          if(node->leftSubtree() != nullptr)                                                                                                                                                                
            next.push(node->leftSubtree());                                                                                                                                                                 
          if(node->rightSubtree() != nullptr)                                                                                                                                                               
            next.push(node->rightSubtree());                                                                                                                                                                
          curr.pop();                                                                                                                                                                                       
        }                                                                                                                                                                                                   
      curr.swap(next);                                                                                                                                                                                      
      level++;                                                                                                                                                                                              
    }                                                                                                                                                                                                       
                                                                                                                                                                                                            
  while( !curr.empty() )                                                                                                                                                                                    
    {                                                                                                                                                                                                       
      TreeNode *front = curr.front();                                                                                                                                                                       
      std::cout << front->value() << " ";                                                                                                                                                                   
      curr.pop();                                                                                                                                                                                           
    }                                                                                                                                                                                                       
                                                                                                                                                                                                            
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Identical: see below helper functions comment for description                                                                                                                                             
bool BinSearchTree::areIdentical( BinSearchTree *bst )                                                                                                                                                      
{                                                                                                                                                                                                           
  TreeNode *node = root;                                                                                                                                                                                    
  TreeNode *n2 = bst->root;                                                                                                                                                                                 
  if( local_identical(node, n2) )                                                                                                                                                                           
     return true;                                                                                                                                                                                           
                                                                                                                                                                                                            
  return false;                                                                                                                                                                                             
}                                                   
                                                                                                                                                                                                           
//Checks if the trees are structurally identical. Returns false if they aren't.                                                                                                                             
bool BinSearchTree::local_identical( TreeNode *root, TreeNode *bst )                                                                                                                                        
{                                                                                                                                                                                                           
  if(root == nullptr && bst == nullptr)                                                                                                                                                                     
    return true;                                                                                                                                                                                            
                                                                                                                                                                                                            
  if(root != nullptr && bst != nullptr)                                                                                                                                                                     
    {                                                                                                                                                                                                       
          return                                                                                                                                                                                            
            (                                                                                                                                                                                               
             local_identical( bst->leftSubtree(), root->leftSubtree() )&&                                                                                                                                   
             local_identical( bst->rightSubtree(), root->rightSubtree() )                                                                                                                                   
             );                                                                                                                                                                                             
    }                                                                                                                                                                                                       
                                                                                                                                                                                                            
  return false;                                                                                                                                                                                             
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
BinSearchTree *BinSearchTree::intersectWith( BinSearchTree *bst )                                                                                                                                           
{                                                                                                                                                                                                           
  TreeNode *node = root;                                                                                                                                                                                    
  TreeNode *n = bst->root;                                                                                                                                                                                  
  BinSearchTree *t = new BinSearchTree();                                                                                                                                                                   
  local_intersect( node, n, t);                                                                                                                                                                             
  return t;                                                                                                                                                                                                 
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Helper of intersect. Takes extra parameters                                                                                                                                                               
void BinSearchTree::local_intersect( TreeNode *r, TreeNode *bst, BinSearchTree *t)     
{                                                                                                                                                                                                           
                                                                                                                                                                                                            
  if( bst == nullptr)                                                                                                                                                                                       
    return;                                                                                                                                                                                                 
                                                                                                                                                                                                            
                                                                                                                                                                                                            
  if(t->local_find(root, bst->value() ) )                                                                                                                                                                   
     t->insert(bst->value());                                                                                                                                                                               
                                                                                                                                                                                                            
  local_intersect(r, bst->leftSubtree(), t);                                                                                                                                                                
  local_intersect(r, bst->rightSubtree(), t);                                                                                                                                                               
                                                                                                                                                                                                            
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Finds the union between trees. No duplicates                                                                                                                                                              
BinSearchTree *BinSearchTree::unionWith(BinSearchTree *bst)                                                                                                                                                 
{                                                                                                                                                                                                           
  TreeNode *n = bst->root;                                                                                                                                                                                  
  BinSearchTree *t = new BinSearchTree();                                                                                                                                                                   
  t = this;                                                                                                                                                                                                 
  local_union(n, t);                                                                                                                                                                                        
  return t;                                                                                                                                                                                                 
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Helper of union to takes extra parameter                                                                                                                                                                  
void BinSearchTree::local_union( TreeNode *bst, BinSearchTree *t)                                                                                                                                           
{                                                                                                                                                                                                           
  if( bst == nullptr)                                                                                                                                                                                       
    return;                                                                                                                                                                                                 
                                                                                                                                                                                                                                              
  if(!t->find(bst->value() ) )                                                                                                                                                                              
        {                                                                                                                                                                                                   
          t->insert(bst->value());                                                                                                                                                                          
        }                                                                                                                                                                                                   
  local_union(bst->leftSubtree(),t);                                                                                                                                                                        
  local_union(bst->rightSubtree(),t);                                                                                                                                                                       
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Difference between a second tree and the defaul tree (Bst - Default tree)                                                                                                                                 
BinSearchTree *BinSearchTree::differenceOf( BinSearchTree *bst )                                                                                                                                            
{                                                                                                                                                                                                           
  local_difference(root, bst);                                                                                                                                                                              
  return bst;                                                                                                                                                                                               
}                                                                                                                                                                                                           
                                                                                                                                                                                                            
//Helper Function for difference. Takes an extra parameter                                                                                                                                                  
void BinSearchTree::local_difference( TreeNode *b, BinSearchTree *bst )                                                                                                                                     
{                                                                                                                                                                                                           
  if( b == nullptr )                                                                                                                                                                                        
    return;                                                                                                                                                                                                 
                                                                                                                                                                                                            
  if(bst->find(b->value() ) )                                                                                                                                                                               
    {                                                                                                                                                                                                       
      bst->remove(b->value());                                                                                                                                                                              
    }                                                                                                                                                                                                       
  local_difference(b->leftSubtree(), bst);                                                                                                                                                                  
                                                                                                                                                                                                            
  local_difference(b->rightSubtree(), bst);                                                                                                                                                                 
  return;                                                                                                                                                                                                   
}                                       
